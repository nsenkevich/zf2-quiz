<?php

namespace Quiz\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * User
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class User extends EntityRepository
{
    public function createFacebookUser($facebookId, array $data)
    {
        $user = $this->findOneBy(array('facebookId' => $facebookId));
        if (!$user) {
            $user = new \Quiz\Entity\User();
            $user->setFacebookId($facebookId);
        }

        if (isset($data['first_name']) && isset($data['last_name'])) {
            $user->setFullname(sprintf('%s %s', $data['first_name'] , $data['last_name']));
        }
        elseif(isset($data['name'])) {
            $user->setFullname($data['name']);
        }

        if (isset($data['email'])) {
            $user->setEmail($data['email']);
        }

        $em = $this->getEntityManager();

        try
        {
            $em->persist($user);
            $em->flush();
        } catch (\Exception $e) {
            \Zend\Debug::dump(__METHOD__.__LINE__);
            \Zend\Debug::dump($e->getMessage());
            # todo log
            return false;
        }

        return $user;
    }

    public function saveAnswers($facebookId, array $answers)
    {
        foreach($answers as $answer)
        {
//            $answers = new \Quiz\Entity\QuizAnswer();
//            $answers->setAnswer();
//            $answers->setQuiz();
//            $answers->setSecond();
        }
    }

    public function getResults()
    {
        $dql = 'SELECT q, a FROM Quiz\Entity\Question q JOIN q.answers a';


        /** @var $q  \Doctrine\ORM\QueryBuilder */
        $q = $this->getEntityManager()->createQuery($dql);
        $q->setMaxResults(10);

        $result = array();

        try {
            $result = $q->getArrayResult();
        } catch (\Exception $e) {

        }

        return $result;
    }

    public function inviteTodayFriends($userId)
    {
        $startDate = date('Y-m-d H:i:s', mktime(0,0, 0, date('m'), date('d'), date('Y'))); // from 00:00:00 today
        $endDate = date('Y-m-d H:i:s', mktime(0,0,-1, date('m'), date('d')+1, date('Y'))); // to 23:59:59 today

        $dql = 'SELECT COUNT(u.id) FROM Quiz\Entity\FriendsInvite u WHERE u.userId = :userId AND u.date BETWEEN :startDate AND :endDate';


        /** @var $q  \Doctrine\ORM\Query */
        $q = $this->getEntityManager()->createQuery($dql);
        $q->setParameter('userId', $userId);
        $q->setParameter('startDate', $startDate);
        $q->setParameter('endDate', $endDate);

        if (isset($_GET['debug'])) {
            \Zend\Debug::dump(__METHOD__.__LINE__);
            \Zend\Debug::dump($q->getSQL());
            \Zend\Debug::dump($q->getParameters());
        }

        $result = false;

        try {
            $result = $q->getSingleScalarResult();
        } catch (\Exception $e) {
            if (isset($_GET['debug'])) {
                \Zend\Debug::dump(__METHOD__.__LINE__);
                \Zend\Debug::dump($e->getMessage());
            }
        }

        if (isset($_GET['debug'])) {
            \Zend\Debug::dump(__METHOD__.__LINE__);
            \Zend\Debug::dump(array('$result' => $result));
        }

        return $result;
    }
}